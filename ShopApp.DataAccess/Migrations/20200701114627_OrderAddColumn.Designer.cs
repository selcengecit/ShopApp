// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopApp.DataAccess.Concrete.EntityFramework;

namespace ShopApp.DataAccess.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20200701114627_OrderAddColumn")]
    partial class OrderAddColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            //modelBuilder.Entity("Shopapp.Entity.Cart", b =>
            //    {
            //        b.Property<int>("Id")
            //            .ValueGeneratedOnAdd()
            //            .HasColumnType("int")
            //            .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            //        b.Property<string>("UserId")
            //            .HasColumnType("nvarchar(max)");

            //        b.HasKey("Id");

            //        b.ToTable("Carts");
            //    });

            //modelBuilder.Entity("Shopapp.Entity.CartItem", b =>
            //    {
            //        b.Property<int>("Id")
            //            .ValueGeneratedOnAdd()
            //            .HasColumnType("int")
            //            .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            //        b.Property<int>("CartId")
            //            .HasColumnType("int");

            //        b.Property<int>("ProductId")
            //            .HasColumnType("int");

            //        b.Property<int>("Quantity")
            //            .HasColumnType("int");

            //        b.HasKey("Id");

            //        b.HasIndex("CartId");

            //        b.HasIndex("ProductId");

            //        b.ToTable("CartItems");
            //    });

            modelBuilder.Entity("Shopapp.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConversationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderState")
                        .HasColumnType("int");

                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Shopapp.Entity.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            //modelBuilder.Entity("shopapp.entity.Category", b =>
            //    {
            //        b.Property<int>("CategoryID")
            //            .ValueGeneratedOnAdd()
            //            .HasColumnType("int")
            //            .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            //        b.Property<string>("CategoryName")
            //            .HasColumnType("nvarchar(max)");

            //        b.HasKey("CategoryID");

            //        b.ToTable("Categories");
            //    });

            //modelBuilder.Entity("shopapp.entity.Product", b =>
            //    {
            //        b.Property<int>("ProductID")
            //            .ValueGeneratedOnAdd()
            //            .HasColumnType("int")
            //            .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            //        b.Property<int>("CategoryID")
            //            .HasColumnType("int");

            //        b.Property<bool>("Discontinued")
            //            .HasColumnType("bit");

            //        b.Property<string>("ProductName")
            //            .HasColumnType("nvarchar(max)");

            //        b.Property<decimal?>("UnitPrice")
            //            .HasColumnType("decimal(18,2)");

            //        b.HasKey("ProductID");

            //        b.ToTable("Products");
            //    });

            //modelBuilder.Entity("Shopapp.Entity.CartItem", b =>
            //    {
            //        b.HasOne("Shopapp.Entity.Cart", "Cart")
            //            .WithMany("CartItems")
            //            .HasForeignKey("CartId")
            //            .OnDelete(DeleteBehavior.Cascade)
            //            .IsRequired();

            //        b.HasOne("shopapp.entity.Product", "Product")
            //            .WithMany()
            //            .HasForeignKey("ProductId")
            //            .OnDelete(DeleteBehavior.Cascade)
            //            .IsRequired();
            //    });

            modelBuilder.Entity("Shopapp.Entity.OrderItem", b =>
                {
                    b.HasOne("Shopapp.Entity.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("shopapp.entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
